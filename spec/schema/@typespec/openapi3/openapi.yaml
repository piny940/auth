openapi: 3.0.0
info:
  title: Auth
  version: 0.0.0
tags: []
paths:
  /account/approvals:
    post:
      operationId: ApprovalsInterface_approve
      summary: Approve a auth request
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Approvals.ApproveErr'
                  error_description:
                    type: string
                required:
                  - error
                  - error_description
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Approvals.ApproveReq'
      security:
        - ApiKeyAuth: []
    get:
      operationId: Approvals_listApprovals
      summary: Get all approvals
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account.Approvals.ListApprovalsRes'
      security:
        - ApiKeyAuth: []
  /account/approvals/{id}:
    delete:
      operationId: Approvals_deleteApproval
      summary: Delete an approval
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      security:
        - ApiKeyAuth: []
  /account/clients:
    get:
      operationId: AccountClients_listClients
      summary: Get all clients
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  clients:
                    type: array
                    items:
                      $ref: '#/components/schemas/Client'
                required:
                  - clients
      security:
        - ApiKeyAuth: []
    post:
      operationId: AccountClients_createClient
      summary: Create a new client
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  client:
                    $ref: '#/components/schemas/Account.Clients.CreatedClient'
                required:
                  - client
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client:
                  $ref: '#/components/schemas/Account.Clients.CreateClientReq'
              required:
                - client
      security:
        - ApiKeyAuth: []
  /account/clients/{id}:
    get:
      operationId: AccountClients_getClient
      summary: Get a client
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  client:
                    $ref: '#/components/schemas/Client'
                required:
                  - client
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      security:
        - ApiKeyAuth: []
    post:
      operationId: AccountClients_updateClient
      summary: Update a client
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client:
                  $ref: '#/components/schemas/Account.Clients.UpdateClientReq'
              required:
                - client
      security:
        - ApiKeyAuth: []
    delete:
      operationId: AccountClients_deleteClient
      summary: Delete a client
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
      security:
        - ApiKeyAuth: []
  /clients/{id}:
    get:
      operationId: ClientsInterface_getClient
      summary: Get a client
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clients.GetClientRes'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Clients.GetClientErr'
                  error_description:
                    type: string
                required:
                  - error
                  - error_description
  /healthz:
    get:
      operationId: Healthz_check
      summary: Check health
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
  /oauth/authorize:
    get:
      operationId: OAuthInterface_authorize
      summary: Authorization Request
      parameters:
        - name: response_type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/OAuth.AuthorizeResponseType'
          explode: false
        - name: client_id
          in: query
          required: true
          schema:
            type: string
          explode: false
        - name: redirect_uri
          in: query
          required: true
          schema:
            type: string
          explode: false
        - name: scope
          in: query
          required: true
          schema:
            type: string
          explode: false
        - name: state
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: max_age
          in: query
          required: false
          schema:
            type: integer
            format: int32
          explode: false
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '302':
          description: Redirection
          headers:
            location:
              required: true
              schema:
                type: string
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/OAuth.AuthorizeErr'
                  error_description:
                    type: string
                  state:
                    type: string
                required:
                  - error
                  - error_description
    post:
      operationId: OAuthInterface_postAuthorize
      summary: Authorization Request
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '302':
          description: Redirection
          headers:
            location:
              required: true
              schema:
                type: string
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/OAuth.AuthorizeErr'
                  error_description:
                    type: string
                  state:
                    type: string
                required:
                  - error
                  - error_description
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OAuth.AuthorizeReqMultiPart'
  /oauth/jwks:
    get:
      operationId: OAuthInterface_getJwks
      summary: Get JSON Web Key Set
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
  /oauth/token:
    post:
      operationId: OAuthInterface_getToken
      summary: Get token
      parameters:
        - name: authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          headers:
            cache-control:
              required: true
              schema:
                $ref: '#/components/schemas/OAuth.TokenCacheControlHeader'
            pragma:
              required: true
              schema:
                $ref: '#/components/schemas/OAuth.TokenPragmaHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth.TokenRes'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/OAuth.TokenErr'
                  error_description:
                    type: string
                required:
                  - error
                  - error_description
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OAuth.TokenReq'
      security:
        - BasicAuth: []
  /session:
    get:
      operationId: SessionInterface_me
      summary: Get session
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session.MeRes'
      security:
        - ApiKeyAuth: []
    post:
      operationId: SessionInterface_login
      summary: Login
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Session.LoginErr'
                  error_description:
                    type: string
                required:
                  - error
                  - error_description
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session.LoginReq'
    delete:
      operationId: SessionInterface_logout
      summary: Logout
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      security:
        - ApiKeyAuth: []
  /userinfo:
    get:
      operationId: Userinfo_getUserinfo
      summary: Get userinfo
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Userinfo.UserinfoRes'
      security:
        - BearerAuth: []
  /users/signup:
    post:
      operationId: UsersInterface_signup
      summary: Signup
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
          headers:
            set-cookie:
              required: true
              schema:
                type: string
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/Users.SignupErr'
                  error_description:
                    type: string
                required:
                  - error
                  - error_description
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users.ReqSignup'
components:
  schemas:
    Account.Approvals.ListApprovalsRes:
      type: object
      required:
        - approvals
      properties:
        approvals:
          type: array
          items:
            $ref: '#/components/schemas/Approval'
    Account.Clients.CreateClientReq:
      type: object
      required:
        - name
        - redirect_urls
      properties:
        name:
          type: string
        redirect_urls:
          type: array
          items:
            type: string
    Account.Clients.CreatedClient:
      type: object
      required:
        - id
        - name
        - secret
        - redirect_urls
      properties:
        id:
          type: string
        name:
          type: string
        secret:
          type: string
        redirect_urls:
          type: array
          items:
            type: string
    Account.Clients.UpdateClientReq:
      type: object
      required:
        - name
        - redirect_urls
      properties:
        name:
          type: string
        redirect_urls:
          type: array
          items:
            type: string
    Approval:
      type: object
      required:
        - id
        - client
        - scopes
      properties:
        id:
          type: string
        client:
          $ref: '#/components/schemas/PublicClient'
        scopes:
          type: array
          items:
            type: string
    Approvals.ApproveErr:
      type: string
      enum:
        - invalid_client
        - invalid_scope
    Approvals.ApproveReq:
      type: object
      required:
        - client_id
        - scope
      properties:
        client_id:
          type: string
        scope:
          type: string
    Client:
      type: object
      required:
        - id
        - name
        - redirect_urls
      properties:
        id:
          type: string
        name:
          type: string
        redirect_urls:
          type: array
          items:
            type: string
    Clients.GetClientErr:
      type: string
      enum:
        - client_not_found
    Clients.GetClientRes:
      type: object
      required:
        - client
      properties:
        client:
          $ref: '#/components/schemas/PublicClient'
    OAuth.AuthorizeErr:
      type: string
      enum:
        - invalid_request
        - unauthorized_client
        - access_denied
        - unsupported_response_type
        - invalid_scope
        - server_error
        - temporarily_unavailable
    OAuth.AuthorizeReqMultiPart:
      type: object
      required:
        - response_type
        - client_id
        - redirect_uri
        - scope
      properties:
        response_type:
          $ref: '#/components/schemas/OAuth.AuthorizeResponseType'
        client_id:
          type: string
        redirect_uri:
          type: string
        scope:
          type: string
        state:
          type: string
        max_age:
          type: integer
          format: int32
    OAuth.AuthorizeResponseType:
      type: string
      enum:
        - code
    OAuth.TokenCacheControlHeader:
      type: string
      enum:
        - no-store
    OAuth.TokenErr:
      type: string
      enum:
        - invalid_request
    OAuth.TokenGrantType:
      type: string
      enum:
        - authorization_code
    OAuth.TokenPragmaHeader:
      type: string
      enum:
        - no-store
    OAuth.TokenReq:
      type: object
      required:
        - grant_type
        - code
        - redirect_uri
      properties:
        grant_type:
          $ref: '#/components/schemas/OAuth.TokenGrantType'
        code:
          type: string
        redirect_uri:
          type: string
    OAuth.TokenRes:
      type: object
      required:
        - access_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
        token_type:
          $ref: '#/components/schemas/OAuth.TokenTokenType'
        expires_in:
          type: integer
          format: int32
        id_token:
          type: string
          title: Id token, if scope includes 'openid'
    OAuth.TokenTokenType:
      type: string
      enum:
        - Bearer
    PublicClient:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
    Session.LoginErr:
      type: string
      enum:
        - invalid_name_or_password
    Session.LoginReq:
      type: object
      required:
        - name
        - password
      properties:
        name:
          type: string
        password:
          type: string
    Session.LogoutErr:
      type: string
      enum:
        - not_logged_in
    Session.MeRes:
      type: object
      required:
        - user
      properties:
        user:
          type: object
          allOf:
            - $ref: '#/components/schemas/User'
          nullable: true
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Userinfo.UserinfoRes:
      type: object
      required:
        - sub
      properties:
        sub:
          type: string
        name:
          type: string
    Users.ReqSignup:
      type: object
      required:
        - name
        - password
        - password_confirmation
      properties:
        name:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
    Users.SignupErr:
      type: string
      enum:
        - name_length_not_enough
        - name_already_used
        - password_length_not_enough
        - password_confirmation_not_match
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: cookie
      name: auth
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: https://auth.piny940.com/api/v1
    description: Auth Server
    variables: {}
